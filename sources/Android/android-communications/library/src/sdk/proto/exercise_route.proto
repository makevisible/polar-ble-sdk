// ROUTE.BPB=PbExerciseRouteSamples
syntax = "proto2";

package data;

import "types.proto";
import "structures.proto";

option java_package = "fi.polar.remote.representation.protobuf";
option java_outer_classname = "ExerciseRouteSamples";

/*
  Route samples of the exercise.
  ! All fields are required.
*/
message PbExerciseRouteSamples {

    // Duration of sample from exercise/transition start,taking pauses into account
    // range [0 - 359999999] (ms), i.e. 00:00:00.000 - 99:59:59.999
    repeated uint32 duration = 1 [packed = true];

    // latitude, value is positive on northern hemisphere
    repeated double latitude = 2;
    
    // longitude, value is positive on eastern hemisphere
    repeated double longitude = 3;
    
    // gps altitude
    repeated sint32 gps_altitude = 4 [packed = true];
    
    // number of satellites
    repeated uint32 satellite_amount = 5 [packed = true];
     
    // fix status
    repeated bool OBSOLETE_fix = 6 [packed = true];
    
    // indicate start and stop indexes when there has not been connection to gps sensor
    repeated PbSensorOffline OBSOLETE_gps_offline = 7;
    
    // GPS date and time in UTC
    repeated PbSystemDateTime OBSOLETE_gps_date_time = 8;

    // GPS date and time of first location point
    optional PbSystemDateTime first_location_time = 9;

};

